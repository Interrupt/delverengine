{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "title": "ButtonModel",
    "type": "object",
    "properties": {
        "class": {
            "const": "com.interrupt.dungeoneer.entities.triggers.ButtonModel",
            "description": "Fully-qualified Java class name.",
            "baseClass": "ButtonModel"
        },
        "triggersId": {
            "type": "string",
            "description": "Entity to send trigger event when triggered.",
            "baseClass": "ButtonModel"
        },
        "triggerResets": {
            "type": "boolean",
            "description": "Reset after being triggered?",
            "baseClass": "ButtonModel",
            "default": true
        },
        "triggerDelay": {
            "type": "number",
            "description": "Time to wait before performing trigger action after receiving trigger event.",
            "baseClass": "ButtonModel",
            "default": 0
        },
        "triggerResetTime": {
            "type": "number",
            "description": "Time to wait to reset after performing trigger action.",
            "baseClass": "ButtonModel",
            "default": 20
        },
        "triggerValue": {
            "type": "string",
            "description": "Trigger event value.",
            "baseClass": "ButtonModel"
        },
        "triggerPropogates": {
            "type": "string",
            "description": "Pass trigger event value to targeted trigger?",
            "baseClass": "ButtonModel",
            "default": true
        },
        "useVerb": {
            "type": "string",
            "description": "Text to show for interaction prompt.",
            "baseClass": "ButtonModel",
            "default": "entities.Trigger.defaultUseVerb"
        },
        "message": {
            "type": "string",
            "description": "Message to display when triggered.",
            "baseClass": "ButtonModel",
            "default": ""
        },
        "messageTime": {
            "type": "number",
            "description": "Duration to display message in seconds.",
            "baseClass": "ButtonModel",
            "default": 5
        },
        "messageSize": {
            "type": "number",
            "description": "Size of displayed message.",
            "baseClass": "ButtonModel",
            "default": 1
        },
        "triggerSound": {
            "type": "string",
            "description": "Filepath of sound to play when triggered.",
            "baseClass": "ButtonModel"
        },
        "triggeredTransformation": {
            "$ref": "../../../gdx/Vector3.schema.json",
            "description": "Triggered animation position component.",
            "baseClass": "ButtonModel",
            "default": {
                "x": 0.0,
                "y": 0.0,
                "z": -0.05
            }
        },
        "triggeredRotation": {
            "$ref": "../../../gdx/Vector3.schema.json",
            "description": "Triggered animation rotation component.",
            "baseClass": "ButtonModel",
            "default": {
                "x": 0.0,
                "y": 0.0,
                "z": 20.0
            }
        },
        "triggerAnimationTime": {
            "type": "number",
            "description": "Triggered animation time.",
            "baseClass": "ButtonModel",
            "default": 20.0
        },
        "meshFile": {
            "type": "string",
            "description": "Path to mesh file of Model.",
            "baseClass": "Model"
        },
        "textureFile": {
            "type": "string",
            "description": "Path to texture file for Model.",
            "baseClass": "Model"
        },
        "receiveDecals": {
            "type": "boolean",
            "description": "Can decals project onto this Entity?",
            "baseClass": "Model",
            "default": true
        },
        "bakeLighting": {
            "type": "boolean",
            "description": "Should lighting for this Model be baked?",
            "baseClass": "Model",
            "default": false
        },
        "rotation": {
            "$ref": "../../../gdx/Vector3.schema.json",
            "description": "Entity rotation.",
            "baseClass": "DirectionalEntity"
        },
        "id": {
            "type": "string",
            "description": "Id of Entity.",
            "baseClass": "Entity"
        },
        "x": {
            "type": "number",
            "description": "Position x-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "y": {
            "type": "number",
            "description": "Position y-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "z": {
            "type": "number",
            "description": "Position z-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "xa": {
            "type": "number",
            "description": "Velocity x-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "ya": {
            "type": "number",
            "description": "Velocity y-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "za": {
            "type": "number",
            "description": "Velocity z-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "roll": {
            "type": "number",
            "description": "Roll used when drawing the Entity.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "tex": {
            "type": "integer",
            "description": "Sprite index.",
            "baseClass": "Entity"
        },
        "isActive": {
            "type": "boolean",
            "description": "Should Entity be updated and drawn.",
            "baseClass": "Entity",
            "default": true
        },
        "yOffset": {
            "type": "number",
            "description": "Vertical offset used when drawing the Entity.",
            "baseClass": "Entity",
            "default": 0
        },
        "shader": {
            "type": "string",
            "description": "Shader name used to draw the Entity.",
            "baseClass": "Entity"
        },
        "artType": {
            "$ref": "../Entity.schema.json#/definitions/ArtType",
            "baseClass": "Entity"
        },
        "spriteAtlas": {
            "type": "string",
            "description": "Sprite TextureAtlas name.",
            "baseClass": "Entity"
        },
        "entityType": {
            "$ref": "../Entity.schema.json#/definitions/EntityType",
            "baseClass": "Entity"
        },
        "isSolid": {
            "type": "boolean",
            "description": "Can other entities collide with this Entity.",
            "baseClass": "Entity",
            "default": false
        },
        "collision": {
            "$ref": "../../../gdx/Vector3.schema.json",
            "description": "Dimensions of Entity bounding box.",
            "baseClass": "Entity"
        },
        "collidesWith": {
            "$ref": "../Entity.schema.json#/definitions/CollidesWith",
            "baseClass": "Entity",
            "default": "all"
        },
        "scale": {
            "type": "number",
            "description": "Scale used when drawing the Entity.",
            "baseClass": "Entity",
            "default": 1.0
        },
        "hidden": {
            "type": "boolean",
            "description": "Should Entity not be drawn?",
            "baseClass": "Entity",
            "default": false
        },
        "isDynamic": {
            "type": "boolean",
            "description": "Is this a physics object?",
            "baseClass": "Entity",
            "default": true
        },
        "spawnChance": {
            "type": "number",
            "description": "Chance to be created.",
            "baseClass": "Entity",
            "default": 1.0,
            "minimum": 0.0,
            "maximum": 1.0
        },
        "detailLevel": {
            "$ref": "../Entity.schema.json#/definitions/DetailLevel",
            "description": "Detail level at which to be drawn",
            "baseClass": "Entity",
            "default": "LOW"
        },
        "drawDistance": {
            "$ref": "../Entity.schema.json#/definitions/DrawDistance",
            "description": "Distance at which to be drawn.",
            "baseClass": "Entity",
            "default": "FAR"
        },
        "canStepUpOn": {
            "type": "boolean",
            "description": "Can Entity be stepped up on?",
            "baseClass": "Entity",
            "default": true
        },
        "floating": {
            "type": "boolean",
            "description": "Is Entity floating?",
            "baseClass": "Entity",
            "default": false
        },
        "mass": {
            "type": "number",
            "description": "Mass of Entity.",
            "baseClass": "Entity",
            "default": 1.0
        },
        "dropSound": {
            "type": "string",
            "description": "Sound played when Entity hits the floor.",
            "baseClass": "Entity",
            "default": "drops/drop_soft.mp3"
        },
        "shadowType": {
            "$ref": "../Entity.schema.json#/definitions/ShadowType",
            "description": "Type of drop shadow.",
            "baseClass": "Entity",
            "default": "NONE"
        },
        "bounces": {
            "type": "boolean",
            "description": "Does Entity bounce?",
            "baseClass": "Entity",
            "default": true
        },
        "stepHeight": {
            "type": "number",
            "description": "How high can Entity step up?",
            "baseClass": "Entity",
            "default": 0.5
        },
        "pushable": {
            "type": "boolean",
            "description": "Can Entity be pushed?",
            "baseClass": "Entity",
            "default": false
        },
        "isStatic": {
            "type": "boolean",
            "baseClass": "Entity",
            "default": false
        },
        "isOnFloor": {
            "type": "boolean",
            "description": "Is Entity on the floor?",
            "baseClass": "Entity",
            "default": false
        },
        "isOnEntity": {
            "type": "boolean",
            "description": "Is Entity on another Entity?",
            "baseClass": "Entity",
            "default": false
        },
        "ignorePlayerCollision": {
            "type": "boolean",
            "description": "Ignore collision with Player?",
            "baseClass": "Entity",
            "default": false
        },
        "color": {
            "$ref": "../../../gdx/Color.schema.json",
            "description": "Entity tint color.",
            "baseClass": "Entity",
            "default": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
            }
        },
        "fullbrite": {
            "type": "boolean",
            "description": "Draw Entity without shading?",
            "baseClass": "Entity",
            "default": false
        },
        "attachmentTransform": {
            "$ref": "../../../gdx/Vector3.schema.json",
            "description": "Position offset of attached Entities.",
            "baseClass": "Entity"
        },
        "attached": {
            "type": "array",
            "description": "Array of attached Entities.",
            "baseClass": "Entity",
            "items": {
                "$ref": "../../../Interfaces.schema.json#/definitions/EntityLike"
            }
        }
    }
}