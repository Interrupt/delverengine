{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "title": "FusedBomb",
    "type": "object",
    "properties": {
        "class": {
            "const": "com.interrupt.dungeoneer.entities.items.FusedBomb",
            "description": "Fully-qualified Java class name.",
            "baseClass": "FusedBomb"
        },
        "dudTex": {
            "type": "integer",
            "description": "Sprite index of item while held.",
            "baseClass": "FusedBomb"
        },
        "isLit": {
            "type": "boolean",
            "description": "Is the bomb lit?",
            "baseClass": "FusedBomb",
            "default": false
        },
        "chanceIsLit": {
            "type": "number",
            "description": "Chance the bomb is lit when spawned.",
            "baseClass": "FusedBomb",
            "default": 0.333
        },
        "countdownTimer": {
            "type": "number",
            "description": "Time until bomb explodes.",
            "baseClass": "FusedBomb",
            "default": 150
        },
        "randomCountdownTimer": {
            "type": "number",
            "description": "Random amount of time added to timer.",
            "baseClass": "FusedBomb",
            "default": 50
        },
        "chanceIsDud": {
            "type": "number",
            "description": "Chance the bomb is a dud.",
            "baseClass": "FusedBomb",
            "default": 0.125
        },
        "isDud": {
            "type": "boolean",
            "description": "Is the bomb a dud?",
            "baseClass": "FusedBomb",
            "default": false
        },
        "wasSpawned": {
            "type": "boolean",
            "description": "Has the bomb been spawned? Guards against relighting bomb on loading a save.",
            "baseClass": "FusedBomb",
            "default": false
        },
        "triggerBehavior": {
            "$ref": "#/definitions/triggerBehaviorType",
            "description": "What does the bomb do when triggered?",
            "baseClass": "FusedBomb",
            "default": "light"
        },
        "explosionRadius": {
            "type": "number",
            "description": "Explosion radius.",
            "baseClass": "FusedBomb",
            "default": 3
        },
        "explosionImpulse":{
            "type": "number",
            "description": "Explosion impulse strength.",
            "baseClass": "FusedBomb",
            "default": 0.2
        },
        "explosionDamage": {
            "type": "number",
            "description": "Explosion damage amount.",
            "baseClass": "FusedBomb",
            "default": 3
        },
        "explosionDamageType":{
            "$ref": "Weapon.schema.json#/definitions/DamageType",
            "description": "Explosion damage type.",
            "baseClass": "FusedBomb",
            "default": "PHYSICAL"
        },
        "explosionColor": {
            "$ref": "../../../gdx/Color.schema.json",
            "description": "Explosion color.",
            "baseClass": "FusedBomb"
        },
        "flashColor":{
            "type": "number",
            "description": "Color to tint bomb as it gets closer to exploding.",
            "baseClass": "FusedBomb"
        },
        "isWet": {
            "type": "boolean",
            "description": "Is the bomb wet?",
            "baseClass": "FusedBomb",
            "default": false
        },
        "explosion": {
            "$ref": "../Explosion.schema.json",
            "description": "Explosion object to create.",
            "baseClass": "FusedBomb"
        },
        "spawns": {
            "type": "array",
            "description": "List of random Entities to spawn when bomb explodes.",
            "items": {
                "$ref": "../../../Interfaces.schema.json#/definitions/EntityLike"
            }
        },
        "spawnsCount": {
            "type": "integer",
            "description": "Number of spawns to create.",
            "baseClass": "FusedBomb",
            "default": 1
        },
        "spawnVelocity": {
            "$ref": "../../../gdx/Vector3.schema.json",
            "description": "Spawn initial velocity.",
            "baseClass": "FusedBomb",
            "default": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0625
            }
        },
        "spawnRandomVelocity": {
            "$ref": "../../../gdx/Vector3.schema.json",
            "description": "Spawn initial random velocity.",
            "baseClass": "FusedBomb",
            "default": {
                "x": 0.125,
                "y": 0.125,
                "z": 0.0
            }
        },
        "spawnMomentumTransfer": {
            "type": "number",
            "description": "Percent of parent speed to inherit.",
            "baseClass": "FusedBomb",
            "default": 1.0
        },
        "itemType": {
            "$ref": "../Item.schema.json#/definitions/ItemType",
            "baseClass": "Item"
        },
        "itemCondition": {
            "$ref": "../Item.schema.json#/definitions/ItemCondition",
            "baseClass": "Item"
        },
        "enchantment": {
            "$ref": "../items/ItemModification.schema.json",
            "baseClass": "Item"
        },
        "prefixEnchantment": {
            "$ref": "../items/ItemModification.schema.json",
            "baseClass": "Item"
        },
        "heldTex": {
            "type": "integer",
            "description": "Sprite index of item while held.",
            "baseClass": "Entity"
        },
        "inventoryTex": {
            "type": "integer",
            "description": "Sprite index of item while in inventory.",
            "baseClass": "Entity"
        },
        "equipLoc": {
            "$ref": "../Item.schema.json#/definitions/EquipLocation",
            "baseClass": "Item"
        },
        "equipSound": {
            "type": "string",
            "description": "Sound played when Item is equipped.",
            "baseClass": "Item"
        },
        "pickupSound": {
            "type": "string",
            "description": "Sound played when Item is picked up.",
            "baseClass": "Item",
            "default": "pu_gen.mp3"
        },
        "identified": {
            "type": "boolean",
            "description": "Is item identified?",
            "baseClass": "Item",
            "default": true
        },
        "cost": {
            "type": "integer",
            "description": "Amount of gold item is worth.",
            "baseClass": "Item"
        },
        "itemLevel": {
            "type": "integer",
            "description": "Item's level. Will scale stats.",
            "baseClass": "Item"
        },
        "minItemLevel": {
            "type": "integer",
            "description": "Minimum allowed item level.",
            "baseClass": "Item"
        },
        "maxItemLevel": {
            "type": "integer",
            "description": "Maximum allowed item level.",
            "baseClass": "Item"
        },
        "unique": {
            "type": "boolean",
            "description": "Is item unique?",
            "baseClass": "Item",
            "default": false
        },
        "triggersOnPickup": {
            "type": "string",
            "description": "Entity id to send trigger event when picked up.",
            "baseClass": "Item"
        },
        "canSpawnEnchanted": {
            "type": "boolean",
            "description": "Allow enchantments on item when spawned?",
            "baseClass": "Item",
            "default": true
        },
        "randomizeCondition": {
            "type": "boolean",
            "description": "Pick random condition for item when spawned?",
            "baseClass": "Item",
            "default": true
        },
        "name": {
            "type": "string",
            "description": "Item name.",
            "baseClass": "Item"
        },
        "description": {
            "type": "string",
            "description": "Item description.",
            "baseClass": "Item"
        },
        "id": {
            "type": "string",
            "description": "Id of Entity.",
            "baseClass": "Entity"
        },
        "x": {
            "type": "number",
            "description": "Position x-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "y": {
            "type": "number",
            "description": "Position y-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "z": {
            "type": "number",
            "description": "Position z-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "xa": {
            "type": "number",
            "description": "Velocity x-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "ya": {
            "type": "number",
            "description": "Velocity y-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "za": {
            "type": "number",
            "description": "Velocity z-component.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "roll": {
            "type": "number",
            "description": "Roll used when drawing the Entity.",
            "baseClass": "Entity",
            "default": 0.0
        },
        "tex": {
            "type": "integer",
            "description": "Sprite index.",
            "baseClass": "Entity"
        },
        "isActive": {
            "type": "boolean",
            "description": "Should Entity be updated and drawn.",
            "baseClass": "Entity",
            "default": true
        },
        "yOffset": {
            "type": "number",
            "description": "Vertical offset used when drawing the Entity.",
            "baseClass": "Entity",
            "default": 0
        },
        "shader": {
            "type": "string",
            "description": "Shader name used to draw the Entity.",
            "baseClass": "Entity"
        },
        "artType": {
            "$ref": "../Entity.schema.json#/definitions/ArtType",
            "baseClass": "Entity"
        },
        "spriteAtlas": {
            "type": "string",
            "description": "Sprite TextureAtlas name.",
            "baseClass": "Entity"
        },
        "entityType": {
            "$ref": "../Entity.schema.json#/definitions/EntityType",
            "baseClass": "Entity"
        },
        "isSolid": {
            "type": "boolean",
            "description": "Can other entities collide with this Entity.",
            "baseClass": "Entity",
            "default": false
        },
        "collision": {
            "$ref": "../../../gdx/Vector3.schema.json",
            "description": "Dimensions of Entity bounding box.",
            "baseClass": "Entity"
        },
        "collidesWith": {
            "$ref": "../Entity.schema.json#/definitions/CollidesWith",
            "baseClass": "Entity",
            "default": "all"
        },
        "scale": {
            "type": "number",
            "description": "Scale used when drawing the Entity.",
            "baseClass": "Entity",
            "default": 1.0
        },
        "hidden": {
            "type": "boolean",
            "description": "Should Entity not be drawn?",
            "baseClass": "Entity",
            "default": false
        },
        "isDynamic": {
            "type": "boolean",
            "description": "Is this a physics object?",
            "baseClass": "Entity",
            "default": true
        },
        "spawnChance": {
            "type": "number",
            "description": "Chance to be created.",
            "baseClass": "Entity",
            "default": 1.0,
            "minimum": 0.0,
            "maximum": 1.0
        },
        "detailLevel": {
            "$ref": "../Entity.schema.json#/definitions/DetailLevel",
            "description": "Detail level at which to be drawn",
            "baseClass": "Entity",
            "default": "LOW"
        },
        "drawDistance": {
            "$ref": "../Entity.schema.json#/definitions/DrawDistance",
            "description": "Distance at which to be drawn.",
            "baseClass": "Entity",
            "default": "FAR"
        },
        "canStepUpOn": {
            "type": "boolean",
            "description": "Can Entity be stepped up on?",
            "baseClass": "Entity",
            "default": true
        },
        "floating": {
            "type": "boolean",
            "description": "Is Entity floating?",
            "baseClass": "Entity",
            "default": false
        },
        "mass": {
            "type": "number",
            "description": "Mass of Entity.",
            "baseClass": "Entity",
            "default": 1.0
        },
        "dropSound": {
            "type": "string",
            "description": "Sound played when Entity hits the floor.",
            "baseClass": "Entity",
            "default": "drops/drop_soft.mp3"
        },
        "shadowType": {
            "$ref": "../Entity.schema.json#/definitions/ShadowType",
            "description": "Type of drop shadow.",
            "baseClass": "Entity",
            "default": "NONE"
        },
        "bounces": {
            "type": "boolean",
            "description": "Does Entity bounce?",
            "baseClass": "Entity",
            "default": true
        },
        "stepHeight": {
            "type": "number",
            "description": "How high can Entity step up?",
            "baseClass": "Entity",
            "default": 0.5
        },
        "pushable": {
            "type": "boolean",
            "description": "Can Entity be pushed?",
            "baseClass": "Entity",
            "default": false
        },
        "isStatic": {
            "type": "boolean",
            "baseClass": "Entity",
            "default": false
        },
        "isOnFloor": {
            "type": "boolean",
            "description": "Is Entity on the floor?",
            "baseClass": "Entity",
            "default": false
        },
        "isOnEntity": {
            "type": "boolean",
            "description": "Is Entity on another Entity?",
            "baseClass": "Entity",
            "default": false
        },
        "ignorePlayerCollision": {
            "type": "boolean",
            "description": "Ignore collision with Player?",
            "baseClass": "Entity",
            "default": false
        },
        "color": {
            "$ref": "../../../gdx/Color.schema.json",
            "description": "Entity tint color.",
            "baseClass": "Entity",
            "default": {
                "r": 1.0,
                "g": 1.0,
                "b": 1.0
            }
        },
        "fullbrite": {
            "type": "boolean",
            "description": "Draw Entity without shading?",
            "baseClass": "Entity",
            "default": false
        },
        "attachmentTransform": {
            "$ref": "../../../gdx/Vector3.schema.json",
            "description": "Position offset of attached Entities.",
            "baseClass": "Entity"
        },
        "attached": {
            "type": "array",
            "description": "Array of attached Entities.",
            "baseClass": "Entity",
            "items": {
                "$ref": "../../../Interfaces.schema.json#/definitions/EntityLike"
            }
        }
    },
    "definitions": {
        "triggerBehaviorType": {
            "type": "string",
            "enum": [
                "light",
                "explode"
            ]
        }
    }
}